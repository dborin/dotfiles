# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

export VIRTUAL_ENV_DISABLE_PROMPT=yes
export DH_DATA_PATH=/home/david/work/designhub/data
export DH_DJANGO_PATH=/home/david/work/designhub/django
export PYTHONPATH=$DH_DJANGO_PATH:$DH_DATA_PATH:$PYTHONPATH
export DJANGO_SETTINGS_MODULE=designhub.settings.dev

alias 1='fg %1'
alias 2='fg %2'
alias 3='fg %3'
alias 4='fg %4'
alias quit='exit'
alias bye='exit'
alias adios='exit'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ls='ls -A --color'
alias ll='ls -lhA --color'
alias lf='ls -AF'
alias lt='ls -lArth --color'
alias ld='ls -dA'
alias h='history'
alias Cat='echo;cat'
alias ggbase='git log --graph --pretty=format:"%C(bold yellow)%h %Creset%C(cyan)(%cr)%Creset %C(bold red)%d%Creset%C(white) %s %Creset%C(green)[%cn]"'
alias gga='ggbase | more'
alias gg='ggbase -n `expr $LINES / 2` | more'
alias ggs='ggbase --stat | more'
alias takeover="tmux detach -a"
alias django="django-admin"
alias redex="DJANGO_SETTINGS_MODULE=designhub.settings.dev PYTHONPATH=$HOME/work/designhub/django/ django-admin rebuild_index"
alias dhpull="git stash;git pull;git stash pop"
alias dhstart='dhstartup -d /home/david/work/designhub -g -u -m'
alias dhrestart='dhstartup -r /home/david/work/designhub -g -u -9 -m'
alias dhkill='dhstartup -k -9'

BLUE="\033[0;34m"
LIGHT_BLUE="\033[1;34m"
CYAN="\033[1;36m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
LIGHT_RED="\033[1;31m"
BG_LIGHT_RED="\033[1;41m"
GREEN="\033[0;32m"
LIGHT_GREEN="\033[1;32m"
MAGENTA="\033[0;35m"
LIGHT_MAGENTA="\033[1;35m"
WHITE="\033[1;37m"
DARK_GREY="\033[0:90m"
LIGHT_GRAY="\033[0;37m"
DEFAULT="\033[0m"

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

function get_venv {
  basename "$VIRTUAL_ENV"
}

function git_color {
  local git_status="$(git status 2> /dev/null)"

  local BLUE="\033[0;97;44m"
  local LIGHT_BLUE="\033[1;34m"
  local CYAN="\033[0;30;106m"
  local YELLOW="\033[0;30;103m"
  local RED="\033[0;31m"
  local LIGHT_RED="\033[1;41m"
  local GREEN="\033[0;32m"
  local LIGHT_GREEN="\033[0;30;102m"
  local MAGENTA="\033[0;30;45m"
  local LIGHT_MAGENTA="\033[0;30;105m"
  local WHITE="\033[1;37m"
  local DARK_GREY="\033[0:90m"
  local LIGHT_GREY="\033[0;37m"

  if [[ $git_status =~ "Changes not staged for commit" ]]; then
    echo -e $LIGHT_GREEN
  elif [[ $git_status =~ "Changes to be committed" ]]; then
    echo -e $YELLOW
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -e $LIGHT_MAGENTA
  elif [[ $git_status =~ "nothing added to commit but untracked files present" ]]; then
    echo -e $CYAN
  elif [[ $git_status =~ "nothing to commit, working tree clean" ]]; then
    echo -e $DARK_GREY
  else
    echo -e $LIGHT_RED
  fi
}

function proml {
#PS1="$GREEN(\$(get_venv))$DEFAULT[$WHITE\u@$YELLOW\h$DEFAULT] $LIGHT_BLUE\w \$(git_color)\$(parse_git_branch)\n$DEFAULT\$ "
PS1="\[$GREEN\](\$(get_venv))\[$DEFAULT\][\[$WHITE\]\u@\[$YELLOW\]\h\[$DEFAULT\]] \[$LIGHT_BLUE\]\w\[$DEFAULT\] \$(git_color)\$(parse_git_branch)\[$DEFAULT\]\n\\$ "
}

proml

function repop {
    if [[ -n $@ ]];then
        DJANGO_SETTINGS_MODULE=designhub.settings.dev PYTHONPATH=$HOME/work/designhub/django:$HOME/work/designhub/data django-admin populate --source $@
    else
        DJANGO_SETTINGS_MODULE=designhub.settings.dev PYTHONPATH=$HOME/work/designhub/django:$HOME/work/designhub/data django-admin populate --source demo_small
    fi
}

function poptart {
    dhkill && repop $@ && dhstart
}

function bigtart {
    local oldpwd=$PWD
    dhkill && cd $HOME/work/designhub/dhui && git pull && npm install && bower install && cd ../django && pip install -q -r requirements.txt -r requirements_devel.txt && repop $@ && dhstart
    cd $oldpwd
}

function reset-dh-db {
    local old_dir=$PWD
    dhkill
    sleep 3
    if [[ -z $1 ]]; then
        $HOME/work/scripts/import_migrate_pgdump.sh -f $HOME/work/designhub_python_tests/data/current.pgdump
    else
        $HOME/work/scripts/import_migrate_pgdump.sh -f $1
    fi
    sleep 2
    dhstart
    cd $old_dir
}

function rollback-dh {
    local old_dir=$PWD
    dhkill
    sleep 3
    if [[ -z $1 ]]; then
        $HOME/work/scripts/import_migrate_pgdump.sh -f $HOME/work/designhub_python_tests/data/current.pgdump -R
    else
        $HOME/work/scripts/import_migrate_pgdump.sh -f $1 -R
    fi
    sleep 2
    dhstartup -d /home/david/work/designhub -g -m
    cd $old_dir
}

export PATH="/home/david/.pyenv/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/david/.local/bin:/home/david/bin"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
